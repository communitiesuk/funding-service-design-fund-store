openapi: "3.0.0"

info:
  title: Funding Service Design - Fund store.
  description: Fund store API for DLUHC Funding Service Design
  version: "0.2.0"

paths:
  /funds:
    get:
      tags:
        - Funds
      summary: Returns list of all funds
      description: Returns list of all funds
      operationId: api.routes.get_funds
      responses:
        200:
          description: "List all funds."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref : 'components.yml#/components/schemas/Fund'
        404:
          description: "No funds exist"
          content:
              texts/plain:
                schema:
                  $ref: 'components.yml#/components/schemas/Error'
  /funds/{fund_id}:
    get:
      operationId: api.routes.get_fund
      tags:
        - Funds
      parameters:
        - $ref: "components.yml#/components/parameters/fund_id"
        - name: language
          in: query
          schema:
            type: string
          required: false
        - name: use_short_name
          in: query
          schema:
            type: boolean
          required: false
      responses:
        200:
          description: "If the fund exists then the data is returned."
          content:
            application/json:
              schema:
                $ref: 'components.yml#/components/schemas/Fund'
        404:
          description: "Fund not found"
          content:
              texts/plain:
                schema:
                  $ref: 'components.yml#/components/schemas/Error'
  /funds/{fund_id}/rounds/{round_id}:
    get:
      tags:
        - Rounds
      summary: Returns the data on a specified round for a specific fund.
      description: Given a fund ID and a round ID we return the relavant round data.
      operationId: api.routes.get_round
      parameters:
        - $ref: "components.yml#/components/parameters/fund_id"
        - $ref: "components.yml#/components/parameters/round_id"
        - name: language
          in: query
          schema:
            type: string
        - name: use_short_name
          in: query
          schema:
            type: boolean
          required: false
      responses:
        200:
          description: "If the round exists then the data is returned."
          content:
            application/json:
              schema:
                $ref: 'components.yml#/components/schemas/Round'
        404:
          description: "Round not found from given fund id and round id."
          content:
              application/json:
                schema:
                  $ref: 'components.yml#/components/schemas/Error'
  /funds/{fund_id}/rounds/{round_id}/eoi_decision_schema:
    get:
      tags:
        - Rounds
      summary: Returns the EOI decision schema for the specified round
      description: Given a fund ID and a round ID we return the relavant round data.
      operationId: api.routes.get_eoi_deicision_schema_for_round
      parameters:
        - $ref: "components.yml#/components/parameters/fund_id"
        - $ref: "components.yml#/components/parameters/round_id"
        - name: language
          in: query
          schema:
            type: string
        - name: use_short_name
          in: query
          schema:
            type: boolean
          required: false
      responses:
        200:
          description: "If the round exists then the data is returned."
          content:
            application/json:
              schema:
                $ref: 'components.yml#/components/schemas/EoiDecisionSchema'
        404:
          description: "Round not found from given fund id and round id."
          content:
              application/json:
                schema:
                  $ref: 'components.yml#/components/schemas/Error'
  /funds/{fund_id}/rounds/{round_id}/events:
    get:
      tags:
        - Rounds
      summary: Returns the events set for the specified round
      description: Given a fund ID and a round ID we return the associated events.
      operationId: api.routes.get_events_for_round
      parameters:
        - $ref: "components.yml#/components/parameters/fund_id"
        - $ref: "components.yml#/components/parameters/round_id"
        - name: only_unprocessed
          in: query
          schema:
            type: boolean
          required: false
      responses:
        200:
          description: "If the round exists then the data is returned."
          content:
            application/json:
              schema:
                $ref: 'components.yml#/components/schemas/Events'
        404:
          description: "Events not found from given fund id and round id."
          content:
              application/json:
                schema:
                  $ref: 'components.yml#/components/schemas/Error'
  /funds/{fund_id}/rounds/{round_id}/event/{event_id}:
    get:
      tags:
        - Rounds
      summary: Returns the event with the given fund, round and event IDs.
      description: Returns the event with the given fund, round and event IDs.
      operationId: api.routes.get_event_for_round
      parameters:
        - $ref: "components.yml#/components/parameters/fund_id"
        - $ref: "components.yml#/components/parameters/round_id"
        - name: event_id
          in: path
          schema:
            type: string
          required: true
      responses:
        200:
          description: "If the event exists then the data is returned."
          content:
            application/json:
              schema:
                $ref: 'components.yml#/components/schemas/Event'
        404:
          description: "Event not found from given fund, round or event id."
          content:
              application/json:
                schema:
                  $ref: 'components.yml#/components/schemas/Error'
    put:
      tags:
        - Rounds
      summary: Updates the event
      description: Updates the event to be marked as processed
      operationId: api.routes.set_round_event_to_processed
      parameters:
        - $ref: "components.yml#/components/parameters/fund_id"
        - $ref: "components.yml#/components/parameters/round_id"
        - name: event_id
          in: path
          schema:
            type: string
          required: true
        - name: processed
          in: query
          schema:
            type: boolean
          required: true
      responses:
        200:
          description: Updates the event to be marked as processed
          content:
            application/json:
              schema:
                $ref: 'components.yml#/components/schemas/Event'
        400:
          description: "Invalid fund, round or event ID supplied"
          content:
                texts/plain:
                  schema:
                    $ref: 'components.yml#/components/schemas/Error'
  /funds/{round_id}/application_reminder_status:
    put:
      tags:
        - Rounds
      summary: Updates the application reminder sent status to True
      description: Updates the application reminder sent status to True
      operationId: api.routes.update_application_reminder_sent_status
      parameters:
        - $ref: "components.yml#/components/parameters/round_id"
        - name: status
          in: query
          schema:
            type: boolean
            enum:
              - true
          required: true
      responses:
        200:
          description: Updated the application reminder sent status to True

        400:
          description: "Invalid round ID is supplied"
          content:
                texts/plain:
                  schema:
                    $ref: 'components.yml#/components/schemas/Error'

  /funds/{fund_id}/rounds/{round_id}/available_flag_allocations:
    get:
      tags:
        - Static values
      summary: Returns list of all available allocations for flags for this round
      description: Returns list of all flag allocations
      operationId: api.routes.get_available_flag_allocations
      parameters:
        - $ref: "components.yml#/components/parameters/fund_id"
        - $ref: "components.yml#/components/parameters/round_id"
      responses:
        200:
          description: "List all available allocations for flags in this round."
          content:
            application/json:
              schema:
                type: array
        404:
          description: "No flag allocations exist"
          content:
              texts/plain:
                schema:
                  $ref: 'components.yml#/components/schemas/Error'
  /funds/{fund_id}/rounds:
    get:
      tags:
        - Rounds
      summary: Given a fund ID we return all rounds for that fund.
      description: Given a fund ID we return all rounds for that fund.
      operationId: api.routes.get_rounds_for_fund
      parameters:
        - in: path
          name: fund_id
          schema:
            type: string
          required: true
        - name: use_short_name
          in: query
          schema:
            type: boolean
          required: false
      responses:
        200:
          description: A list of rounds matching the given fund ID.
          # content:
          #   application/json:
          #     schema:
          #       type: array
                # items:
                #   $ref : 'components.yml#/components/schemas/Round'
        404:
          description: "Rounds page not found for given fund id."
          content:
            application/json:
              schema:
                $ref: "components.yml#/components/schemas/Error"
  /funds/{fund_id}/rounds/{round_id}/sections/application:
    get:
      tags:
        - Sections
      summary: Returns the application sections for the given round
      description: Given a fund ID and a round ID we return the display sections for Application
      operationId: api.routes.get_sections_for_round_application
      parameters:
        - $ref: "components.yml#/components/parameters/fund_id"
        - $ref: "components.yml#/components/parameters/round_id"
        - name: language
          in: query
          schema:
            type: string
      responses:
        200:
          description: "If the round exists then the sections are returned."
        404:
          description: "If an invalid fund/round ID is supplied"
  /funds/{fund_id}/rounds/{round_id}/sections/assessment:
    get:
      tags:
        - Sections
      summary: Returns the assessment sections for the given round
      description: Given a fund ID and a round ID we return the display sections for assessment
      operationId: api.routes.get_sections_for_round_assessment
      parameters:
        - $ref: "components.yml#/components/parameters/fund_id"
        - $ref: "components.yml#/components/parameters/round_id"
        - name: language
          in: query
          schema:
            type: string
      responses:
        200:
          description: "If the round exists then the sections are returned."
        404:
          description: "If an invalid fund/round ID is supplied"
  /events/{type}:
    get:
      summary: Returns all the event that are of a given type.
      description: Returns all the event that are of a given type.
      operationId: api.routes.get_events_by_type
      parameters:
        - name: type
          in: path
          schema:
            type: string
          required: true
      responses:
        200:
          description: "If there are events of the type then the data is returned."
          content:
            application/json:
              schema:
                $ref: 'components.yml#/components/schemas/Events'
        404:
          description: "Event not found from given fund, round or event id."
          content:
              application/json:
                schema:
                  $ref: 'components.yml#/components/schemas/Error'
  /event:
    post:
      summary: Creates an event with the supplied parameters
      description: Returns the event that has been created
      operationId: api.routes.create_event
      responses:
        201:
          description: SUCCESS - Event created
          content:
            application/json:
              schema:
                $ref: 'components.yml#/components/schemas/Event'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                round_id:
                  type: string
                processed:
                  type: string
                type:
                  type: string
                activation_date:
                  type: string
                  format: date
  /event/{event_id}:
    get:
      summary: Returns the event with the given event ID.
      description: Returns the event with the given event ID.
      operationId: api.routes.get_event_by_id
      parameters:
        - name: event_id
          in: path
          schema:
            type: string
          required: true
      responses:
        200:
          description: "If the event exists then the data is returned."
          content:
            application/json:
              schema:
                $ref: 'components.yml#/components/schemas/Event'
        404:
          description: "Event not found from given event id."
          content:
              application/json:
                schema:
                  $ref: 'components.yml#/components/schemas/Error'
    put:
      summary: Updates the event
      description: Updates the event to be marked as processed
      operationId: api.routes.set_event_to_processed
      parameters:
        - name: event_id
          in: path
          schema:
            type: string
          required: true
        - name: processed
          in: query
          schema:
            type: boolean
          required: true
      responses:
        200:
          description: Updates the event to be marked as processed
          content:
            application/json:
              schema:
                $ref: 'components.yml#/components/schemas/Event'
        400:
          description: "Invalid fund, round or event ID supplied"
          content:
                texts/plain:
                  schema:
                    $ref: 'components.yml#/components/schemas/Error'
tags:
  - name: Funds
    description: "See all funds or find a fund"
  - name: Rounds
    description: "See all rounds or find a round"
