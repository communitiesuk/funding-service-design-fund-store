name: tag-to-release
permissions:
  contents: write
  packages: write
on:
  pull_request:
    types:
      - closed
    branches:
      - main
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+
      - v[0-9]+.[0-9]+.[0-9]+-prerelease

    paths-ignore:
      - '**/README.md'

env:
  # This uses the default config, since
  # build is not a actual config file in envs.
  REGISTRY: ghcr.io
  DOCKER_IMAGE: funding-service-design-fund-store
  FLASK_ENV : build


jobs:
  tag-to-release:
    if: ${{ github.actor != 'dependabot[bot]' }}
    uses: communitiesuk/funding-service-design-workflows/.github/workflows/tag-to-release.yml@main
    with:
      build_static_assets: false
  paketo_build:
    needs: tag-to-release
    runs-on: ubuntu-latest
    name: Packaging and building the application
    steps:
      - uses: buildpacks/github-actions/setup-pack@v5.0.0
      - uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and publish app image
        run: "pack build ${{ env.DOCKER_IMAGE }} --builder paketobuildpacks/builder:base"

      - name: Push image
        run: |
          IMAGE_ID=${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.DOCKER_IMAGE }}

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=${{ needs.tag-to-release.outputs.new_tag }}

          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag ${{ env.DOCKER_IMAGE }} $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
