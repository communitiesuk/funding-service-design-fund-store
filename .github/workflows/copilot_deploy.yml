name: Deploy to AWS
on:
  workflow_dispatch:
    inputs:
      environment:
        description:  Which AWS Account to use
        type: choice
        required: true
        options:
        - dev
        - test
        - uat
        - prod
      run_performance_tests:
        required: false
        default: true
        type: boolean
        description: Run performance tests
      run_e2e_tests:
        required: false
        default: true
        type: boolean
        description: Run e2e tests
  push:
    # Ignore README markdown
    # Only automatically deploy when something in the app or tests folder has changed
    paths:
      - '!**/README.md'
      - 'api/**'
      - 'config/**'
      - 'db/**'
      - 'tests/**'
      - 'requirements-dev.in'
      - 'requirements-dev.txt'
      - 'requirements.in'
      - 'requirements.txt'
      - '.github/workflows/copilot_deploy.yml'

jobs:
  tag_version:
    runs-on: ubuntu-latest
    outputs:
      version_to_tag: ${{ steps.fund_store_tagging.outputs.tag_value }}
    steps:
      - id: fund_store_tagging
        run: |
          echo "tag_value=$(echo '${{ github.ref }}' | sed -e 's,.*/\(.*\),\1,')" >> $GITHUB_OUTPUT

  pre_deploy_tests:
    uses: communitiesuk/funding-service-design-workflows/.github/workflows/pre-deploy.yml@main
    with:
      # Note - no db-name, so defaults to postgres_db
      postgres_unit_testing: true

  paketo_build:
    needs: [ tag_version ]
    concurrency: build-fund-store-pack
    permissions:
      packages: write
    uses: communitiesuk/funding-service-design-workflows/.github/workflows/package.yml@main
    with:
      version_to_build: ${{ needs.tag_version.outputs.version_to_tag }}
      owner: ${{ github.repository_owner }}
      application: funding-service-design-fund-store

  copilot_environments_workflow_setup:
    runs-on: ubuntu-latest
    outputs:
      test_deploy: ${{ steps.copilot_env_list.outputs.test_deploy }}
      prod_deploy: ${{ steps.copilot_env_list.outputs.prod_deploy }}
    steps:
      - id: copilot_env_list
        run: |
          if [ "${{ github.ref }}" == 'refs/heads/main' ]; then
            echo "test_deploy=yes">> $GITHUB_OUTPUT
            echo "prod_deploy=yes">> $GITHUB_OUTPUT
          elif [ "${{ inputs.environment }}" == "" ]; then
            echo "prod_deploy=yes">> $GITHUB_OUTPUT
          fi

  ind_deploy:
    needs: [ pre_deploy_tests, paketo_build, tag_version ]
    if: ${{ inputs.environment != '' }}
    uses: communitiesuk/funding-service-design-workflows/.github/workflows/standard-deploy.yml@BAU_standardise_deploy
    secrets:
      AWS_ACCOUNT: ${{ secrets.AWS_ACCOUNT }}
    with:
      environment: ${{ inputs.environment }}
      app_name: 'fund-store'
      version: ${{ github.ref_name == 'main' && 'latest' || needs.tag_version.outputs.version_to_tag }}
      db_name: fsd-fund-store

  post_ind_deploy_tests:
    needs: ind_deploy
    concurrency:
      group: 'fsd-preaward-test-${{ inputs.environment }}'
      cancel-in-progress: false
    secrets:
      FSD_GH_APP_ID: ${{ secrets.FSD_GH_APP_ID }}
      FSD_GH_APP_KEY: ${{ secrets.FSD_GH_APP_KEY }}
    uses: communitiesuk/funding-service-design-workflows/.github/workflows/post-deploy.yml@main
    with:
      run_performance_tests: ${{ inputs.run_performance_tests || true }}
      run_e2e_tests: ${{ inputs.run_e2e_tests || false }}
      environment: ${{ inputs.environment }}

  dev_deploy:
    needs: [ pre_deploy_tests, paketo_build, tag_version, copilot_environments_workflow_setup ]
    if: ${{ needs.copilot_environments_workflow_setup.outputs.test_deploy == 'yes' }}
    uses: communitiesuk/funding-service-design-workflows/.github/workflows/standard-deploy.yml@BAU_standardise_deploy
    secrets:
      AWS_ACCOUNT: ${{ secrets.AWS_ACCOUNT }}
    with:
      environment: dev
      app_name: fund-store
      version: ${{ github.ref_name == 'main' && 'latest' || needs.tag_version.outputs.version_to_tag }}
      db_name: fsd-fund-store

  post_dev_deploy_tests:
    needs: dev_deploy
    concurrency:
      group: 'fsd-preaward-test-dev'
      cancel-in-progress: false
    secrets:
      FSD_GH_APP_ID: ${{ secrets.FSD_GH_APP_ID }}
      FSD_GH_APP_KEY: ${{ secrets.FSD_GH_APP_KEY }}
    uses: communitiesuk/funding-service-design-workflows/.github/workflows/post-deploy.yml@main
    with:
      run_performance_tests: ${{ inputs.run_performance_tests || true }}
      run_e2e_tests: ${{ inputs.run_e2e_tests || false }}
      environment: dev

  test_deploy:
    needs: [ post_dev_deploy_tests, paketo_build, tag_version, copilot_environments_workflow_setup ]
    if: ${{ needs.copilot_environments_workflow_setup.outputs.test_deploy == 'yes' }}
    uses: communitiesuk/funding-service-design-workflows/.github/workflows/standard-deploy.yml@BAU_standardise_deploy
    secrets:
      AWS_ACCOUNT: ${{ secrets.AWS_ACCOUNT }}
    with:
      environment: 'test'
      app_name: 'fund-store'
      version: ${{ github.ref_name == 'main' && 'latest' || needs.tag_version.outputs.version_to_tag }}
      db_name: fsd-fund-store

  post_test_deploy_tests:
    needs: test_deploy
    concurrency:
      group: 'fsd-preaward-test-test'
      cancel-in-progress: false
    secrets:
      FSD_GH_APP_ID: ${{ secrets.FSD_GH_APP_ID }}
      FSD_GH_APP_KEY: ${{ secrets.FSD_GH_APP_KEY }}
    uses: communitiesuk/funding-service-design-workflows/.github/workflows/post-deploy.yml@main
    with:
      run_performance_tests: ${{ inputs.run_performance_tests || false }}
      run_e2e_tests: ${{ inputs.run_e2e_tests || true }}
      environment: test

  uat_deploy:
    needs: [ post_test_deploy_tests, paketo_build, tag_version, copilot_environments_workflow_setup ]
    if: ${{ needs.copilot_environments_workflow_setup.outputs.prod_deploy == 'yes' }}
    uses: communitiesuk/funding-service-design-workflows/.github/workflows/standard-deploy.yml@BAU_standardise_deploy
    secrets:
      AWS_ACCOUNT: ${{ secrets.AWS_ACCOUNT }}
    with:
      environment: 'uat'
      app_name: 'fund-store'
      version: ${{ github.ref_name == 'main' && 'latest' || needs.tag_version.outputs.version_to_tag }}
      db_name: fsd-fund-store

  post_uat_deploy_tests:
    needs: uat_deploy
    concurrency:
      group: 'fsd-preaward-test-uat'
      cancel-in-progress: false
    secrets:
      FSD_GH_APP_ID: ${{ secrets.FSD_GH_APP_ID }}
      FSD_GH_APP_KEY: ${{ secrets.FSD_GH_APP_KEY }}
    uses: communitiesuk/funding-service-design-workflows/.github/workflows/post-deploy.yml@main
    with:
      run_performance_tests: ${{ inputs.run_performance_tests || false }}
      run_e2e_tests: ${{ inputs.run_e2e_tests || true }}
      environment: uat

  prod_deploy:
    needs: [ post_uat_deploy_tests, paketo_build, tag_version, copilot_environments_workflow_setup ]
    if: ${{ needs.copilot_environments_workflow_setup.outputs.prod_deploy == 'yes' }}
    uses: communitiesuk/funding-service-design-workflows/.github/workflows/standard-deploy.yml@BAU_standardise_deploy
    secrets:
      AWS_ACCOUNT: ${{ secrets.AWS_ACCOUNT }}
    with:
      environment: 'prod'
      app_name: 'fund-store'
      version: ${{ github.ref_name == 'main' && 'latest' || needs.tag_version.outputs.version_to_tag }}
      db_name: fsd-fund-store
